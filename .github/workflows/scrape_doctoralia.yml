name: Scrape Doctoralia Calendar

on:
  # Permite ejecutarlo manualmente desde la pestaña "Actions"
  workflow_dispatch:
  # Ejecuta el script cada 6 horas
  schedule:
    - cron: "0 */6 * * *"

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    # Le da permiso a ESTA TAREA para que pueda escribir en tu repositorio.
    # Es la forma moderna y segura de hacerlo.
    permissions:
      contents: write

    steps:
      # 1. Descargar tu código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Configurar Chrome para Selenium
      - name: Set up Google Chrome
        uses: browser-actions/setup-chrome@v1

      # 4. Instalar las librerías de Python
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager

      # 5. Ejecutar tu script para crear/actualizar el archivo horarios.json
      - name: Run scraper
        run: python scraper.py

      # 6. Usar la herramienta experta para guardar los cambios
      # Esta action se encarga de todo: comprueba si hay cambios, sincroniza,
      # hace commit y empuja (push) automáticamente.
      - name: Commit and push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(bot): Actualizar horarios de Doctoralia"
          # El archivo específico que debe vigilar
          file_pattern: public/api/horarios.json