name: Scrape Doctoralia Calendar

on:
  workflow_dispatch: # Permite ejecutarlo manualmente desde GitHub
  schedule:
    # Se ejecuta cada 6 horas (a las 00:00, 06:00, 12:00, 18:00 UTC)
    - cron: "0 */6 * * *"

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Google Chrome
      uses: browser-actions/setup-chrome@v1

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager

    - name: Run scraper
      run: python scraper.py # Asegúrate de que tu script se llame scraper.py

    - name: Commit and push if changed
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add public/api/horarios.json
        # Solo crea un commit y hace push si el archivo ha cambiado
        if ! git diff --staged --quiet; then
          git commit -m "chore: Actualizar horarios de Doctoralia"
      
          # Intenta hacer push hasta 5 veces si falla por estar desactualizado
          for i in 1 2 3 4 5; do
            git push && break  # Si el push funciona, salimos del bucle
            echo "Push fallido. Reintentando ($i/5) después de sincronizar..."
            sleep 2 # Pequeña pausa
            git pull --rebase # Sincroniza los cambios
          done
        else
          echo "No hay cambios en los horarios para commitear."
        fi